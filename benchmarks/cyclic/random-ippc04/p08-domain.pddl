(define (domain prob_domain) 
 (:requirements :strips :probabilistic-effects) 
 (:constants AI HQ VX NV VR XK EH ST SL LJ )
 (:predicates 
	 (KF ?X ) 
	 (OO ?X ) 
	 (SG ?X ?Y ) 
	 (QV ?X ) 
	 (CP ?X ?Y ) 
(clear)
(not-clear)
 )
(:functions (total-cost))
(:action BOL
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (SG ?Z ?X) 
		 (SG ?Y ?Z) 
		 (CP ?Y ?Z) 
		 (CP ?Z ?X) 
  )
 :effect (and (increase (total-cost) 1) (probabilistic 
		 100/100 (and (not (CP ?Y ?Z)) )  
          ))
 )
(:action JKW
 :parameters (?X ?Y )
 :precondition (and 
		 (CP ?X ?X) 
		 (KF ?X) 
		 (OO ?Y) 
		 (OO ?X) 
		 (QV ?X) 
  )
 :effect (and (increase (total-cost) 1) (probabilistic 
		 100/100 (and (QV ?Y) (CP ?Y ?Y) )  
          ))
 )
(:action SNO
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (KF ?Z) 
		 (OO ?Y) 
		 (QV ?Y) 
		 (OO ?Z) 
  )
 :effect (and (increase (total-cost) 1) (probabilistic 
		 3/100 (and (CP ?X ?Y) )  
		 97/100 (and (SG ?Z ?Y) (CP ?Y ?X) )  
          ))
 )
(:action RXI
 :parameters (?X ?Y ?Z )
 :precondition (and 
		 (CP ?Y ?Y) 
		 (QV ?Y) 
		 (QV ?Z) 
  )
 :effect (and (increase (total-cost) 1) (probabilistic 
		 94/100 (and (KF ?Y) (SG ?Z ?X) )  
		 6/100 (and (OO ?X) (not (CP ?Y ?Y)) (SG ?Y ?Y) (SG ?X ?X) )  
          ))
 )
(:action TLV
 :parameters (?X )
 :precondition (and 
		 (QV ?X) 
		 (CP ?X ?X) 
  )
 :effect (and (increase (total-cost) 1) (probabilistic 
		 100/100 (and (SG ?X ?X) (OO ?X) )  
          ))
 )
(:action reset1 
 :precondition (not-clear)
 :effect (and (increase (total-cost) 1)  
	     (forall (?x) (and 
      (not (KF ?x)) 
      (not (OO ?x)) 
      (not (SG ?x AI)) 
      (not (SG ?x HQ)) 
      (not (SG ?x VX)) 
      (not (SG ?x NV)) 
      (not (SG ?x VR)) 
      (not (SG ?x XK)) 
      (not (SG ?x EH)) 
      (not (SG ?x ST)) 
      (not (SG ?x SL)) 
      (not (SG ?x LJ)) 
      (not (QV ?x)) 
      (not (CP ?x AI)) 
      (not (CP ?x HQ)) 
      (not (CP ?x VX)) 
      (not (CP ?x NV)) 
      (not (CP ?x VR)) 
      (not (CP ?x XK)) 
      (not (CP ?x EH)) 
      (not (CP ?x ST)) 
      (not (CP ?x SL)) 
      (not (CP ?x LJ)) 
))
(not (not-clear))
(clear)))

(:action reset2 
 :precondition (clear) 
 :effect (and (increase (total-cost) 1)  (not-clear)
              (not (clear))
(SG VX EH) 
(SG SL NV) 
(SG ST AI) 
(OO SL) 
(KF AI) 
(SG XK HQ) 
(OO NV) 
(OO XK) 
(CP VX XK) 
(QV NV) 
(OO ST) 
(QV AI) 
(QV LJ) 
(SG VX AI) 
(SG AI ST) 
(CP SL ST) 
(CP SL XK) 
(KF LJ) 
(OO AI) 
(CP VR XK) 
)))
