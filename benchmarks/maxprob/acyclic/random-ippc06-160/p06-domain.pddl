(define
  (domain prob_domain)
  (:requirements :strips :probabilistic-effects)
  (:types horizon-value - object rndobj)
  (:constants horzn1 - horizon-value  EU PL SV VF NT HT ZT VO JO SD - rndobj)
  (:predicates (horizon ?h - horizon-value) (horizon-decrement ?h0 ?h1 ?h2 - horizon-value)
    (PZ ?X)
    (ZE ?X ?Y)
    (FZ ?X ?Y)
    (BD ?X ?Y)
    (OL ?X)
    (clear)
    (not-clear)
  )
  (:functions (total-cost))
  (:action FED
    :parameters (?hcur ?hnew - horizon-value ?X ?Y - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (FZ ?Y ?Y) (FZ ?Y ?X) (BD ?X ?Y) (PZ ?X))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 22/100 (and (not (FZ ?Y ?Y)) (OL ?X)) 78/100 (and (not (BD ?X ?Y)) (not (PZ ?X)) (OL ?X) (ZE ?X ?Y))))
  )
  (:action WFG
    :parameters (?hcur ?hnew - horizon-value ?X ?Y - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (OL ?Y))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 100/100 (and (BD ?X ?Y) (FZ ?X ?Y))))
  )
  (:action COO
    :parameters (?hcur ?hnew - horizon-value ?X ?Y - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (OL ?Y))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 100/100 (and (PZ ?X))))
  )
  (:action YUS
    :parameters (?hcur ?hnew - horizon-value ?X ?Y ?Z - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (OL ?Y) (BD ?Z ?Z) (PZ ?Z) (FZ ?Y ?Z))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 54/100 (and (ZE ?Z ?Y)) 36/100 (and (FZ ?Z ?X) (OL ?Z) (BD ?Z ?Y)) 10/100 (and (not (FZ ?Y ?Z)))))
  )
  (:action KDC
    :parameters (?hcur ?hnew - horizon-value ?X ?Y - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (PZ ?Y) (FZ ?X ?Y))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 100/100 (and (BD ?X ?X) (ZE ?X ?Y))))
  )
  (:action reset1
    :parameters (?hcur ?hnew - horizon-value)
:precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (not-clear))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (forall (?x) (and (not (PZ ?x)) (not (ZE ?x EU)) (not (ZE ?x PL)) (not (ZE ?x SV)) (not (ZE ?x VF)) (not (ZE ?x NT)) (not (ZE ?x HT)) (not (ZE ?x ZT)) (not (ZE ?x VO)) (not (ZE ?x JO)) (not (ZE ?x SD)) (not (FZ ?x EU)) (not (FZ ?x PL)) (not (FZ ?x SV)) (not (FZ ?x VF)) (not (FZ ?x NT)) (not (FZ ?x HT)) (not (FZ ?x ZT)) (not (FZ ?x VO)) (not (FZ ?x JO)) (not (FZ ?x SD)) (not (BD ?x EU)) (not (BD ?x PL)) (not (BD ?x SV)) (not (BD ?x VF)) (not (BD ?x NT)) (not (BD ?x HT)) (not (BD ?x ZT)) (not (BD ?x VO)) (not (BD ?x JO)) (not (BD ?x SD)) (not (OL ?x)))) (not (not-clear)) (clear))
  )
  (:action reset2
    :parameters (?hcur ?hnew - horizon-value)
:precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (clear))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (not-clear) (not (clear)) (PZ HT) (PZ JO) (ZE VF PL) (BD HT VF) (PZ SV) (FZ JO ZT) (PZ VF) (OL JO) (FZ SV VF) (OL VF) (OL NT) (BD NT PL) (BD NT VO) (BD ZT SV) (ZE SD VO) (BD ZT JO) (FZ ZT NT) (BD SD VF) (FZ ZT PL) (ZE SV PL))
  )
)