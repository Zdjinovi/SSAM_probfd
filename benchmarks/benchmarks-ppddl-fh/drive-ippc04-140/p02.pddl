(define (problem a-drive-problem293)
(:domain drive)
(:objects horzn0 horzn1 horzn2 horzn3 horzn4 horzn5 horzn6 horzn7 horzn8 - horizon-value c0 c1 c2  - coord)
(:init (horizon horzn8) (horizon-decrement horzn1 horzn0) (horizon-decrement horzn2 horzn1) (horizon-decrement horzn3 horzn2) (horizon-decrement horzn4 horzn3) (horizon-decrement horzn5 horzn4) (horizon-decrement horzn6 horzn5) (horizon-decrement horzn7 horzn6) (horizon-decrement horzn8 horzn7) 
       (heading north)
       (at c0 c0)
       (alive)
       (light_color unknown)
       (clockwise north east)
       (clockwise east south)
       (clockwise south west)
       (clockwise west north)
       (nextx c0 c1 east)
       (nextx c1 c0 west)
       (nextx c1 c2 east)
       (nextx c2 c1 west)
       (nextx c0 c0 north)
       (nextx c0 c0 south)
       (nextx c1 c1 north)
       (nextx c1 c1 south)
       (nextx c2 c2 north)
       (nextx c2 c2 south)
       (nexty c0 c1 north)
       (nexty c1 c0 south)
       (nexty c0 c0 east)
       (nexty c0 c0 west)
       (nexty c1 c1 east)
       (nexty c1 c1 west)
       (light_delay c0 c0 quick)
       (light_delay c0 c1 quick)
       (light_delay c1 c0 quick)
       (light_delay c1 c1 slow)
       (light_delay c2 c0 slow)
       (light_delay c2 c1 normal)
       (light_preference c0 c0 north_south)
       (light_preference c0 c1 east_west)
       (light_preference c1 c0 none)
       (light_preference c1 c1 none)
       (light_preference c2 c0 north_south)
       (light_preference c2 c1 east_west)
       (road-length c0 c0 c0 c1 short)
       (road-length c0 c1 c0 c0 short)
       (road-length c1 c0 c1 c1 short)
       (road-length c1 c1 c1 c0 short)
       (road-length c2 c0 c2 c1 long)
       (road-length c2 c1 c2 c0 long)
       (road-length c0 c0 c1 c0 medium)
       (road-length c1 c0 c0 c0 medium)
       (road-length c1 c0 c2 c0 short)
       (road-length c2 c0 c1 c0 short)
       (road-length c0 c1 c1 c1 short)
       (road-length c1 c1 c0 c1 short)
       (road-length c1 c1 c2 c1 long)
       (road-length c2 c1 c1 c1 long)
)
(:goal (and (alive) (at c2 c1)))
(:metric minimize (total-cost))
)
