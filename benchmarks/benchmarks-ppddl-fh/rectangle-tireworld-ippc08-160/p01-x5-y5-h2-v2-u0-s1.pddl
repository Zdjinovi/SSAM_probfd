(define (problem rect-5-5-2-2-1)
  (:domain rectangle-world)
  (:objects horzn0 horzn1 horzn2 horzn3 horzn4 horzn5 horzn6 - horizon-value n0 n1 n2 n3 n4 - int)
  (:init (horizon horzn6) (horizon-decrement horzn1 horzn0) (horizon-decrement horzn2 horzn1) (horizon-decrement horzn3 horzn2) (horizon-decrement horzn4 horzn3) (horizon-decrement horzn5 horzn4) (horizon-decrement horzn6 horzn5) (= (total-cost) 0) (xpos n0)
	 (ypos n0)
         (next n0 n1)
         (next n1 n2)
         (next n2 n3)
         (next n3 n4)
	 (safeX n1)
	 (safeX n3)
	 (safeY n0)
	 (safeY n2)
  )
  (:goal (and (not (dead)) (xpos n4) (ypos n4)))
  (:metric minimize (total-cost))
)
