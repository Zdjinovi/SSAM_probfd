(define (problem elev_3_8_2_6_24676)
  (:domain elevators)
  (:objects horzn0 horzn2 horzn3 horzn4 horzn5 horzn6 horzn7 horzn8 horzn9 horzn10 horzn11 horzn12 horzn13 horzn14 horzn15 horzn16 horzn17 horzn18 horzn19 horzn20 horzn21 horzn22 horzn23 horzn24 horzn25 horzn26 horzn27 horzn28 horzn29 horzn30 - horizon-value f2 f3 - floor p2 p3 p4 p5 p6 p7 p8 - pos e1 e2 - elevator c1 c2 c3 c4 c5 c6 - coin)
  (:init (horizon horzn30) (horizon-decrement horzn1 horzn1 horzn0) (horizon-decrement horzn2 horzn1 horzn1) (horizon-decrement horzn3 horzn1 horzn2) (horizon-decrement horzn4 horzn1 horzn3) (horizon-decrement horzn5 horzn1 horzn4) (horizon-decrement horzn6 horzn1 horzn5) (horizon-decrement horzn7 horzn1 horzn6) (horizon-decrement horzn8 horzn1 horzn7) (horizon-decrement horzn9 horzn1 horzn8) (horizon-decrement horzn10 horzn1 horzn9) (horizon-decrement horzn11 horzn1 horzn10) (horizon-decrement horzn12 horzn1 horzn11) (horizon-decrement horzn13 horzn1 horzn12) (horizon-decrement horzn14 horzn1 horzn13) (horizon-decrement horzn15 horzn1 horzn14) (horizon-decrement horzn16 horzn1 horzn15) (horizon-decrement horzn17 horzn1 horzn16) (horizon-decrement horzn18 horzn1 horzn17) (horizon-decrement horzn19 horzn1 horzn18) (horizon-decrement horzn20 horzn1 horzn19) (horizon-decrement horzn21 horzn1 horzn20) (horizon-decrement horzn22 horzn1 horzn21) (horizon-decrement horzn23 horzn1 horzn22) (horizon-decrement horzn24 horzn1 horzn23) (horizon-decrement horzn25 horzn1 horzn24) (horizon-decrement horzn26 horzn1 horzn25) (horizon-decrement horzn27 horzn1 horzn26) (horizon-decrement horzn28 horzn1 horzn27) (horizon-decrement horzn29 horzn1 horzn28) (horizon-decrement horzn30 horzn1 horzn29) (at f1 p1) (dec_f f2 f1) (dec_f f3 f2) (dec_p p2 p1) (dec_p p3 p2) (dec_p p4 p3) (dec_p p5 p4) (dec_p p6 p5) (dec_p p7 p6) (dec_p p8 p7) (shaft e1 p1) (in e1 f1) (shaft e2 p5) (in e2 f1) (coin-at c1 f3 p5) (coin-at c2 f3 p1) (coin-at c3 f1 p7) (coin-at c4 f2 p6) (coin-at c5 f2 p7) (coin-at c6 f2 p1) (gate f2 p5) (gate f2 p7) (gate f3 p8))
  (:goal (and (have c1) (have c2) (have c3) (have c4) (have c5) (have c6)))
  (:metric minimize (total-cost))
)
