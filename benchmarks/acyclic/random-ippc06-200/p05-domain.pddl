(define
  (domain prob_domain)
  (:requirements :strips :probabilistic-effects)
  (:types horizon-value - object rndobj)
  (:constants horzn1 - horizon-value  QW ZC ZN NW TZ TA FR VQ EV DA - rndobj)
  (:predicates (horizon ?h - horizon-value) (horizon-decrement ?h0 ?h1 ?h2 - horizon-value)
    (KY ?X ?Y)
    (GK ?X ?Y)
    (VS ?X)
    (YV ?X)
    (RO ?X ?Y)
    (clear)
    (not-clear)
  )
  (:functions (total-cost))
  (:action GQT
    :parameters (?hcur ?hnew - horizon-value ?X ?Y ?Z - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (YV ?Z) (VS ?X))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 100/100 (and (KY ?Y ?Y))))
  )
  (:action DOI
    :parameters (?hcur ?hnew - horizon-value ?X ?Y ?Z - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (KY ?Z ?X) (YV ?Y))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 59/100 (and (VS ?Z) (KY ?X ?Z)) 41/100 (and (GK ?X ?Y))))
  )
  (:action HGG
    :parameters (?hcur ?hnew - horizon-value ?X - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (GK ?X ?X))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 17/100 (and (not (GK ?X ?X)) (VS ?X) (RO ?X ?X)) 83/100 (and (not (GK ?X ?X)))))
  )
  (:action FKF
    :parameters (?hcur ?hnew - horizon-value ?X ?Y ?Z - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (GK ?X ?Y))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 51/100 (and (KY ?Z ?Y)) 17/100 (and (KY ?Z ?X) (GK ?Y ?Z) (not (GK ?X ?Y))) 32/100 (and (KY ?Y ?Y) (VS ?Z) (YV ?Z))))
  )
  (:action LGW
    :parameters (?hcur ?hnew - horizon-value ?X ?Y ?Z - rndobj)
    :precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (KY ?Z ?X))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (probabilistic 65/100 (and (YV ?Y) (KY ?Y ?X)) 35/100 (and (RO ?Z ?X) (KY ?Z ?Y) (YV ?Y))))
  )
  (:action reset1
    :parameters (?hcur ?hnew - horizon-value)
:precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (not-clear))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (forall (?x) (and (not (KY ?x QW)) (not (KY ?x ZC)) (not (KY ?x ZN)) (not (KY ?x NW)) (not (KY ?x TZ)) (not (KY ?x TA)) (not (KY ?x FR)) (not (KY ?x VQ)) (not (KY ?x EV)) (not (KY ?x DA)) (not (GK ?x QW)) (not (GK ?x ZC)) (not (GK ?x ZN)) (not (GK ?x NW)) (not (GK ?x TZ)) (not (GK ?x TA)) (not (GK ?x FR)) (not (GK ?x VQ)) (not (GK ?x EV)) (not (GK ?x DA)) (not (VS ?x)) (not (YV ?x)) (not (RO ?x QW)) (not (RO ?x ZC)) (not (RO ?x ZN)) (not (RO ?x NW)) (not (RO ?x TZ)) (not (RO ?x TA)) (not (RO ?x FR)) (not (RO ?x VQ)) (not (RO ?x EV)) (not (RO ?x DA)))) (not (not-clear)) (clear))
  )
  (:action reset2
    :parameters (?hcur ?hnew - horizon-value)
:precondition (and (horizon ?hcur) (horizon-decrement ?hcur horzn1 ?hnew) (clear))
    :effect (and (not (horizon ?hcur)) (horizon ?hnew) (increase (total-cost) 1) (not-clear) (not (clear)) (KY TA ZC) (VS DA) (GK TZ QW) (KY TZ FR) (RO FR TZ) (VS ZC) (YV ZC) (YV QW) (YV ZN) (GK ZC QW) (RO ZC FR) (GK TZ VQ) (GK QW QW) (GK ZC ZC) (YV FR) (YV DA) (RO ZN NW) (GK VQ TZ) (GK VQ ZN) (RO FR TA))
  )
)